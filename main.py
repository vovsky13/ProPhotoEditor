import streamlit as st
from PIL import Image
from config import Config
from utils import create_grid
from processing import process_image, export_to_pdf
from presets import save_preset

Config.ensure_directories()

def main():
    st.set_page_config(page_title="üì∏ Pro –§–æ—Ç–æ –Ω–∞ –î–æ–∫—É–º–µ–Ω—Ç—ã", layout="wide")
    st.title("üì∏ Pro –§–æ—Ç–æ –Ω–∞ –î–æ–∫—É–º–µ–Ω—Ç—ã")

    uploaded_files = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ", type=["jpg", "jpeg", "png"], accept_multiple_files=True)

    with st.sidebar:
        st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        template_choice = st.selectbox("–§–æ—Ä–º–∞—Ç", list(Config.TEMPLATES_MM.keys()))
        dpi_choice = st.selectbox("–ö–∞—á–µ—Å—Ç–≤–æ (DPI)", Config.DPI_VALUES, index=2)
        model_choice = st.selectbox("AI –ú–æ–¥–µ–ª—å", Config.AI_MODELS)
        background_color = st.color_picker("–§–æ–Ω –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è", "#FFFFFF")

        brightness = st.slider("–Ø—Ä–∫–æ—Å—Ç—å", 0.5, 2.0, 1.0, 0.1)
        contrast = st.slider("–ö–æ–Ω—Ç—Ä–∞—Å—Ç", 0.5, 2.0, 1.0, 0.1)
        saturation = st.slider("–ù–∞—Å—ã—â–µ–Ω–Ω–æ—Å—Ç—å", 0.0, 2.0, 1.0, 0.1)
        gamma = st.slider("–ì–∞–º–º–∞", 0.5, 2.0, 1.0, 0.1)

        preset_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞")
        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ—Å–µ—Ç"):
            settings = {
                "template": template_choice,
                "dpi": dpi_choice,
                "model": model_choice,
                "background_color": background_color,
                "brightness": brightness,
                "contrast": contrast,
                "saturation": saturation,
                "gamma": gamma,
            }
            save_preset(preset_name, settings)
            st.success(f"–ü—Ä–µ—Å–µ—Ç '{preset_name}' —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")

    if uploaded_files:
        processed_images = []
        for uploaded_file in uploaded_files:
            with st.expander(f"–û–±—Ä–∞–±–æ—Ç–∫–∞: {uploaded_file.name}", expanded=True):
                original_image = Image.open(uploaded_file).convert("RGB")
                st.image(original_image, caption="–ò—Å—Ö–æ–¥–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)

                if st.checkbox("–ü–æ–∫–∞–∑–∞—Ç—å —Å–µ—Ç–∫—É", key=uploaded_file.name):
                    grid_image = create_grid(original_image.copy())
                    st.image(grid_image, caption="–°–µ—Ç–∫–∞", use_column_width=True)

                if st.button(f"üöÄ –û–±—Ä–∞–±–æ—Ç–∞—Ç—å {uploaded_file.name}"):
                    template_mm = Config.TEMPLATES_MM[template_choice]
                    processed_img = process_image(
                        original_image,
                        template_mm,
                        dpi_choice,
                        model_choice,
                        background_color,
                        brightness,
                        contrast,
                        saturation,
                        gamma
                    )
                    st.image(processed_img, caption="–†–µ–∑—É–ª—å—Ç–∞—Ç", use_column_width=True)
                    processed_images.append(processed_img)

        if processed_images:
            if st.button("üìÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å PDF 10x15"):
                pdf_path = export_to_pdf(processed_images)
                st.success("PDF —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!")
                st.download_button("‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å PDF", data=open(pdf_path, "rb"), file_name="document_photos.pdf")

if __name__ == "__main__":
    main()